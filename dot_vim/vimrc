vim9script
#=== VIM SETTINGS =====================================================================

unlet! g:skip_defaults_vim
source $VIMRUNTIME/defaults.vim
g:mapleader = ' '      # Set the leader key to space
set tabstop=4 shiftwidth=4 expandtab
set nohlsearch showmatch
set number relativenumber laststatus=2
set breakindent smartindent wrap linebreak
set encoding=UTF-8 updatetime=750
set noswapfile undofile undodir=~/.local/state/vim/undo
set path+=** wildmenu wildignore+=*/node_modules/*,*/.git/*,*/.DS_Store
set splitright
nnoremap <leader>1 :Lexplore %:p:h<CR>
nnoremap <leader><Tab> <C-^><CR>

if has('termguicolors')
  set termguicolors
endif

autocmd FileType markdown setlocal spell spelllang=en_gb
autocmd TextChanged,TextChangedI <buffer> if &readonly == false && filereadable(bufname('%')) | silent write | endif

# --- Netrw settings-----------------------------------------------------------------
g:netrw_liststyle = 3
g:netrw_fastbrowse = 0
g:netrw_localcopydircmd = 'cp -r'
g:netrw_winsize = 30
g:netrw_list_hide = '^\.,\~,*\.pyc,*\.egg*$,*/_trial_temp*"'

augroup netrw
  autocmd!
  autocmd FileType netrw setlocal bufhidden=wipe
augroup end


#=== PLUGINS ==========================================================================

# Automatically download vim-plug if not present
if empty(glob('~/.vim/autoload/plug.vim'))
  execute '!curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
endif

plug#begin('~/.vim/pack/packager/start')
# Navigation, search, language features
Plug 'junegunn/fzf', { 'dir': '~/.vim/pack/packager/opt/fzf', 'do': { -> fzf#install() }}
Plug 'junegunn/fzf.vim',
Plug 'yegappan/lsp', { 'dir': '~/.vim/pack/packager/opt/lsp' }
Plug 'github/copilot.vim'
# Version control
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
# UI modifications
Plug 'sainnhe/everforest'
# Helpers
Plug '907th/vim-auto-save'
Plug 'christoomey/vim-tmux-navigator'
Plug 'tpope/vim-dispatch'
Plug 'janko-m/vim-test'
Plug 'tpope/vim-dadbod'
Plug 'kristijanhusak/vim-dadbod-ui'
plug#end()

#--- LSP settings ---------------------------------------------------------------------
var lspOptions = {
  autoComplete: v:true, noNewlineInCompletion: v:true,
  autoPopulateDiags: v:true, ignoreMissingServer: v:true,
  showSignature: v:true, semanticHighlight: v:true,
  outlineOnRight: v:true, outlineWinSize: 60,
}
autocmd User LspSetup call LspOptionsSet(lspOptions)

var lspServers = [
  {
    name: 'gopls', filetype: ['go'],  path: 'gopls', args: ['serve'],
    workspaceConfig: { gopls: {
      directoryFilters: ["-**/node_modules", "-**/.git"],
      semanticTokens: v:true, semanticTokenTypes: { string: v:true },
      hoverKind: 'SingleLine', gofumpt: v:true,
    }},
  },
  { 
    name: 'rustanalyzer', filetype: ['rust'], path: 'rust-analyzer', args: [], syncInit: true,
    initializationOptions: { inlayHints: { typeHints: { enable: true }, parameterHints: { enable: true }}},
  },
  { name: 'tsserver', filetype: ['javascript', 'typescript'], path: 'typescript-language-server', args: ['--stdio'] },
  { name: 'ruff', filetype: ['python'], path: 'ruff', args: ['server'] },
  { name: 'pylsp', filetype: ['python'], path: 'pylsp', args: [] },
]
autocmd User LspSetup call LspAddServer(lspServers)

nnoremap gd :LspGotoDefinition<CR>
nnoremap gi :LspGotoImpl<CR>
nnoremap <leader>R :LspRename<CR>
nnoremap <leader>3 :LspOutline<CR>
nnoremap <leader>P :LspSymbolSearch<CR>
nnoremap ]e :LspDiagNext<CR>
nnoremap [e :LspDiagPrev<CR>
nnoremap <leader>L :LspFormat<CR>
nnoremap <leader><CR> :LspCodeAction<CR>

#--- FZF Settings ------------------------------------------------------------"
nnoremap <leader>f :BLines<CR>
nnoremap <leader>p :GFiles<CR>
nnoremap <leader>F :Rg<CR>
nnoremap <leader>b :Buffers<CR>

#--- GitGutter settings ---------------------------------------------------------------"
nnoremap ]h <Plug>(GitGutterNextHunk)
nnoremap [h <Plug>(GitGutterPrevHunk)
g:gitgutter_sign_added = '┃'
g:gitgutter_sign_modified = '┃'
g:gitgutter_sign_removed = '┃'
g:gitgutter_sign_priority = 0

#--- Vim Test settings ----------------------------------------------------------------"
nnoremap <leader>tn :TestNearest<CR>
nnoremap <leader>tf :TestFile<CR>
nnoremap <leader>tl :TestLast<CR>

g:test#strategy = "dispatch"
g:test#python#pytest#executable = 'python -m pytest -rA'
g:test#python#pyunit#executable = 'python -m unittest --buffer'
g:test#python#runner = 'pyunit'
g:test#go#gotest#executable = 'go test -v'

#--- DadBodUI Settings --------------------------------------------------------------------"
g:db_ui_execute_on_save = 0

#--- Auto Save Settings -------------------------------------------------------------------"
g:auto_save = 1
g:auto_save_silent = 1

#--- Colorscheme settings -----------------------------------------------------------------"
g:everforest_better_performance = 1
set background=dark
colorscheme everforest

